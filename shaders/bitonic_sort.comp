#version 460
#extension GL_EXT_shader_explicit_arithmetic_types_int32 : require
layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

struct encoded_light_t
{
    uint32_t morton_code;
    uint32_t index;
};

layout(set = 0, binding = 0) buffer lights_buffer
{
    encoded_light_t arr[];
};

layout(push_constant) uniform constants
{
   int j;
   int k;
};

void swap_elements(uint a, uint b)
{
    encoded_light_t temp = arr[a];
    arr[a] = arr[b];
    arr[b] = temp;
};

void main()
{
    uint i = gl_GlobalInvocationID.x; 
    uint l = i ^ j;
    if (l > i)
    {
        if ((i & k) == 0)
        {
           if (arr[i].morton_code > arr[l].morton_code)
           {
               swap_elements(l, i);
           }
        }
        else 
        {
            if (arr[i].morton_code < arr[l].morton_code)
            {
                swap_elements(l, i);
            }
        }
    }
}
